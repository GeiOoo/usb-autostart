name: PR-Build

on:
  pull_request:
    branches: [ main ]

permissions:
  pull-requests: write
  issues: write

# Cancel any in-progress job or run for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Get base branch version
        id: base-version
        shell: pwsh
        run: |
          $BASE_VERSION = git show "${{ github.event.pull_request.base.sha }}:package.json" | node -p "JSON.parse(require('fs').readFileSync(0, 'utf-8')).version"
          Write-Output "Base version: $BASE_VERSION"
          "version=$BASE_VERSION" >> $env:GITHUB_OUTPUT

      - name: Get PR version
        id: pr-version
        shell: pwsh
        run: |
          $PR_VERSION = node -p "require('./package.json').version"
          Write-Output "PR version: $PR_VERSION"
          "version=$PR_VERSION" >> $env:GITHUB_OUTPUT

    #   - name: Install dependencies
    #     run: npm ci

    #   - name: Build application
    #     run: npm run build

    #   - name: Upload build artifacts
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: build-${{ github.run_id }}
    #       path: dist/
    #       if-no-files-found: error

      - name: Find Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '### Build Artifacts'

      - name: Create Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Build Artifacts (Run ID: ${{ github.run_id }})
            âœ… Build completed successfully!
            
            ${{ steps.base-version.outputs.version != steps.pr-version.outputs.version && format('ðŸ“¦ Version bump: {0} â†’ {1}', steps.base-version.outputs.version, steps.pr-version.outputs.version) || '' }}
            
            Download the artifacts:
            - [Build Artifacts](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/build-${{ github.run_id }})
            
            These links will directly download the artifacts using nightly.link service.
            
            Build Info:
            - Run ID: ${{ github.run_id }}
            - Commit: ${{ github.sha }}
            - Timestamp: ${{ github.event.pull_request.updated_at }}
