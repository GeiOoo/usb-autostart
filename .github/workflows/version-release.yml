name: Version Release

on:
  push:
    branches: [ main ]

jobs:
  check-version:
    runs-on: windows-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      current_version: ${{ steps.check.outputs.current_version }}
      pr_number: ${{ steps.find-pr.outputs.pr_number }}
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous version
        id: prev-version
        run: |
          $prevVersion = git show HEAD^:package.json | ConvertFrom-Json | Select-Object -ExpandProperty version
          echo "prev_version=$prevVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Get current version
        id: curr-version
        run: |
          $currVersion = Get-Content package.json | ConvertFrom-Json | Select-Object -ExpandProperty version
          echo "curr_version=$currVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Check version change
        id: check
        run: |
          $prevVersion = "${{ steps.prev-version.outputs.prev_version }}"
          $currVersion = "${{ steps.curr-version.outputs.curr_version }}"
          $changed = $prevVersion -ne $currVersion
          echo "version_changed=$changed" >> $env:GITHUB_OUTPUT
          echo "current_version=$currVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Find associated PR
        id: find-pr
        run: |
          $pr = git log -1 --pretty=%B | Select-String -Pattern "^Merge pull request #(\d+)"
          if ($pr) {
            $prNumber = $pr.Matches.Groups[1].Value
            echo "pr_number=$prNumber" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

  create-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'True'
    runs-on: windows-latest
    
    steps:
      - name: Download PR build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.event.before }}
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.check-version.outputs.current_version }}
          tag_name: v${{ needs.check-version.outputs.current_version }}
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
