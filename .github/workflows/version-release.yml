name: Version Release

on:
  push:
    branches: [ main ]

jobs:
  check-version:
    runs-on: windows-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      current_version: ${{ steps.check.outputs.current_version }}
      pr_number: ${{ steps.find-pr.outputs.pr_number }}
      build_run_id: ${{ steps.get-pr-build.outputs.run_id }}
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous version
        id: prev-version
        run: |
          $prevVersion = git show HEAD^:package.json | ConvertFrom-Json | Select-Object -ExpandProperty version
          echo "prev_version=$prevVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Get current version
        id: curr-version
        run: |
          $currVersion = Get-Content package.json | ConvertFrom-Json | Select-Object -ExpandProperty version
          echo "curr_version=$currVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Check version change
        id: check
        run: |
          $prevVersion = "${{ steps.prev-version.outputs.prev_version }}"
          $currVersion = "${{ steps.curr-version.outputs.curr_version }}"
          $changed = if ($prevVersion -ne $currVersion) { "true" } else { "false" }
          echo "version_changed=$changed" >> $env:GITHUB_OUTPUT
          echo "current_version=$currVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Find associated PR
        id: find-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the PR number directly from the merge commit using GitHub CLI
          $commit = "${{ github.sha }}"
          $pr = gh api "/repos/${{ github.repository }}/commits/$commit/pulls" | ConvertFrom-Json | Select-Object -First 1
          
          if ($pr) {
            echo "pr_number=$($pr.number)" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh
        
      - name: Get PR build info
        id: get-pr-build
        if: steps.find-pr.outputs.pr_number
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $prNumber = "${{ steps.find-pr.outputs.pr_number }}"
          $workflow = "build.yml"
          
          # Get the most recent successful build run for this PR
          $run = gh run list --workflow $workflow --json conclusion,databaseId,number --jq '.[] | select(.conclusion=="success")' | ConvertFrom-Json | Select-Object -First 1
          
          if ($run) {
            echo "run_id=$($run.databaseId)" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

  create-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: windows-latest
    
    steps:
      - name: Download PR build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ needs.check-version.outputs.build_run_id }}
          path: dist
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.check-version.outputs.current_version }}
          tag_name: v${{ needs.check-version.outputs.current_version }}
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
